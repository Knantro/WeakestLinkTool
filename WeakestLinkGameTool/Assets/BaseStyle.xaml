<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:WeakestLinkGameTool.Assets.Controls"
                    xmlns:converters="clr-namespace:WeakestLinkGameTool.Converters"
                    xmlns:themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic">

    <converters:TextAlignmentConverter x:Key="TextAlignmentConverter"/>
    <converters:DoubleDivisionConverter x:Key="DoubleDivisionConverter"/>
    <converters:VisibilityConverter x:Key="VisibilityConverter"/>
    <converters:VisibilityConverter x:Key="InvertVisibilityConverter" Invert="True"/>
    <converters:VisibilityConverter x:Key="CollapseVisibilityConverter" Collapse="True"/>
    <converters:VisibilityConverter x:Key="InvertCollapseVisibilityConverter" Collapse="True" Invert="True"/>
    <converters:FontSizeScaleConverter x:Key="FontSizeScaleConverter"/>
    <converters:InvertBooleanConverter x:Key="InvertBooleanConverter"/>

    <Brush x:Key="TextBoxBackgroundBrush">#776495ED</Brush>
    <Brush x:Key="TextBoxBorderBrush">#7700FFFF</Brush>

    <Brush x:Key="MessageBoxBackgroundBrush">#465E87</Brush>
    <Brush x:Key="MessageBoxBorderBrush">#008888</Brush>

    <LinearGradientBrush x:Key="BlueButtonBrush" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Color="RoyalBlue" Offset="0.3"/>
        <GradientStop Color="DarkBlue" Offset="0.6"/>
        <GradientStop Color="RoyalBlue" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="RedButtonBrush" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Color="#FF3333" Offset="0.3"/>
        <GradientStop Color="DarkRed" Offset="0.6"/>
        <GradientStop Color="#FF3333" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="GrayButtonBrush" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Color="#BFBFBF" Offset="0.3"/>
        <GradientStop Color="DimGray" Offset="0.6"/>
        <GradientStop Color="#BFBFBF" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="GreenButtonBrush" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Color="LimeGreen" Offset="0.3"/>
        <GradientStop Color="DarkGreen" Offset="0.6"/>
        <GradientStop Color="LimeGreen" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="CommonBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="Black" Offset="0.3"/>
        <GradientStop Color="DarkBlue" Offset="2"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="VotingBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="Black" Offset="0.3"/>
        <GradientStop Color="DarkRed" Offset="2"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="WalkAShameBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="Black" Offset="0.3"/>
        <GradientStop Color="DarkGray" Offset="2"/>
    </LinearGradientBrush>

    <Style x:Key="DefaultText" TargetType="{x:Type controls:OutlinedTextBlock}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Fill" Value="White"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontFamily" Value="Microsoft Sans Serif"/>
        <Setter Property="StrokeThickness" Value="1"/>
        <Setter Property="Stroke" Value="Black"/>
    </Style>

    <Style x:Key="DefaultTextBox" TargetType="{x:Type controls:OutlinedTextBox}">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DefaultButton" TargetType="{x:Type Button}">
        <Setter Property="Content" Value=""/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Width" Value="170"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="{StaticResource BlueButtonBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0 -1 0 1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}"
                            CornerRadius="1000000000"
                            Background="{TemplateBinding Background}">
                        <controls:OutlinedTextBlock Style="{StaticResource DefaultText}"
                                                    Text="{TemplateBinding Button.Content}"
                                                    Fill="{TemplateBinding Button.Foreground}"
                                                    Margin="{TemplateBinding Button.Padding}"
                                                    TextAlignment="{TemplateBinding Button.HorizontalContentAlignment, Converter={StaticResource TextAlignmentConverter}}"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsPressed" Value="True">
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.98" ScaleY="0.98"
                                                    CenterX="{Binding Width, RelativeSource={RelativeSource AncestorType={x:Type Button}}, Converter={StaticResource DoubleDivisionConverter}, ConverterParameter=2}"
                                                    CenterY="{Binding Height, RelativeSource={RelativeSource AncestorType={x:Type Button}}, Converter={StaticResource DoubleDivisionConverter}, ConverterParameter=2}"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="Button.IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource GrayButtonBrush}"/>
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultNonClickableButton" TargetType="{x:Type Button}">
        <Setter Property="Content" Value=""/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Width" Value="170"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="{StaticResource BlueButtonBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0 -1 0 1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}"
                            CornerRadius="1000000000"
                            Background="{TemplateBinding Background}">
                        <controls:OutlinedTextBlock Style="{StaticResource DefaultText}"
                                                    Text="{TemplateBinding Button.Content}"
                                                    Fill="{TemplateBinding Button.Foreground}"
                                                    Margin="{TemplateBinding Button.Padding}"
                                                    TextAlignment="{TemplateBinding Button.HorizontalContentAlignment, Converter={StaticResource TextAlignmentConverter}}"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource GrayButtonBrush}"/>
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultRadioButton" TargetType="{x:Type RadioButton}">
        <Setter Property="Content" Value=""/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Width" Value="170"/>
        <Setter Property="Background" Value="{StaticResource BlueButtonBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0 -3 0 3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}"
                            CornerRadius="1000000000"
                            Background="{TemplateBinding Background}">
                        <controls:OutlinedTextBlock Style="{StaticResource DefaultText}"
                                                    Text="{TemplateBinding RadioButton.Content}"
                                                    Margin="{TemplateBinding RadioButton.Padding}"
                                                    TextAlignment="{TemplateBinding RadioButton.HorizontalContentAlignment, Converter={StaticResource TextAlignmentConverter}}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="CheckBox.IsChecked" Value="True">
                            <Setter Property="Border.Background" Value="{StaticResource GreenButtonBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#region DataGrid Style-->

    <Style x:Key="DefaultDataGridRowStyle" TargetType="{x:Type DataGridRow}">
        <Setter Property="Margin" Value="0 10 0 0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Border x:Name="DGR_Border" Padding="0 8" CornerRadius="5"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            SnapsToDevicePixels="True">
                        <SelectiveScrollingGrid>
                            <SelectiveScrollingGrid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </SelectiveScrollingGrid.ColumnDefinitions>
                            <SelectiveScrollingGrid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </SelectiveScrollingGrid.RowDefinitions>
                            <DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <DataGridDetailsPresenter Grid.Column="1" Grid.Row="1"
                                                      SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                      Visibility="{TemplateBinding DetailsVisibility}"/>
                            <DataGridRowHeader Grid.RowSpan="2"
                                               SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                               Visibility="{Binding HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                        </SelectiveScrollingGrid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource TextBoxBorderBrush}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource TextBoxBorderBrush}"/>
            </Trigger>
            <!-- <MultiTrigger> -->
            <!--     <MultiTrigger.Conditions> -->
            <!--         <Condition Property="IsSelected" Value="true" /> -->
            <!--         <Condition Property="Selector.IsSelectionActive" Value="false" /> -->
            <!--     </MultiTrigger.Conditions> -->
            <!--     <Setter Property="Background" Value="#dfdfdf" /> -->
            <!-- </MultiTrigger> -->
        </Style.Triggers>
    </Style>

    <Style x:Key="DefaultDataGridCellStyle" TargetType="{x:Type DataGridCell}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Margin" Value="5 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border Background="{TemplateBinding Background}" BorderThickness="0" SnapsToDevicePixels="True">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="SizeWE"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultDataGridColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#69717D"/>
        <Setter Property="Margin" Value="15 0 15 10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <themes:DataGridHeaderBorder Background="{TemplateBinding Background}"
                                                     BorderThickness="{TemplateBinding BorderThickness}"
                                                     BorderBrush="{TemplateBinding BorderBrush}"
                                                     IsClickable="{TemplateBinding CanUserSort}"
                                                     IsPressed="{TemplateBinding IsPressed}"
                                                     IsHovered="{TemplateBinding IsMouseOver}"
                                                     Padding="{TemplateBinding Padding}"
                                                     SeparatorBrush="{TemplateBinding SeparatorBrush}"
                                                     SortDirection="{TemplateBinding SortDirection}"
                                                     SeparatorVisibility="{TemplateBinding SeparatorVisibility}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <ContentPresenter.ContentTemplate>
                                    <ItemContainerTemplate>
                                        <controls:OutlinedTextBlock Style="{StaticResource DefaultText}"
                                                                    Text="{TemplateBinding ContentPresenter.Content}"
                                                                    TextAlignment="Center"/>
                                    </ItemContainerTemplate>
                                </ContentPresenter.ContentTemplate>
                            </ContentPresenter>
                        </themes:DataGridHeaderBorder>
                        <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left"
                               Style="{StaticResource ColumnHeaderGripperStyle}"/>
                        <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right"
                               Style="{StaticResource ColumnHeaderGripperStyle}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultDataGrid" TargetType="{x:Type DataGrid}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#222528"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="RowDetailsVisibilityMode" Value="Collapsed"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="Margin" Value="0 10 0 0"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="SelectionUnit" Value="FullRow"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="CanUserReorderColumns" Value="False"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="CanUserResizeColumns" Value="False"/>
        <Setter Property="CanUserSortColumns" Value="False"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="GridLinesVisibility" Value="None"/>
        <Setter Property="ColumnWidth" Value="*"/>
        <Setter Property="RowStyle" Value="{StaticResource DefaultDataGridRowStyle}"/>
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource DefaultDataGridColumnHeaderStyle}"/>
        <Setter Property="CellStyle" Value="{StaticResource DefaultDataGridCellStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
                                                                        Grid.Column="1"
                                                                        Visibility="{Binding HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                                Grid.ColumnSpan="2"
                                                                CanContentScroll="{TemplateBinding CanContentScroll}"
                                                                Grid.Row="1"/>
                                        <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2"
                                                   Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical"
                                                   Grid.Row="1" ViewportSize="{TemplateBinding ViewportHeight}"
                                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                                        <Grid Grid.Column="1" Grid.Row="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition
                                                    Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1"
                                                       Maximum="{TemplateBinding ScrollableWidth}"
                                                       Orientation="Horizontal"
                                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                                       Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <!--#endregion-->

    <Style x:Key="ScrollBarLineButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Canvas Height="18">
                        <Polygon Fill="LightBlue" Points="3,15 15,15 9,3"></Polygon>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarLineButtonBottomStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Canvas Height="18">
                        <Polygon Fill="LightBlue" Points="3,3 9,15 15,3"></Polygon>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarPageButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border BorderBrush="Transparent"></Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Margin" Value="1,0,1,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle Fill="LightBlue" Margin="2"></Rectangle>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="18"/>
                <RowDefinition Height="*"/>
                <RowDefinition MaxHeight="18"/>
            </Grid.RowDefinitions>

            <RepeatButton Grid.Row="0" Height="18"
                          Style="{StaticResource ScrollBarLineButtonStyle}"
                          Command="ScrollBar.LineUpCommand">
            </RepeatButton>
            <Track Name="PART_Track" Grid.Row="1"
                   IsDirectionReversed="True">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource ScrollBarPageButtonStyle}">
                    </RepeatButton>
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumbStyle}">
                    </Thumb>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource ScrollBarPageButtonStyle}">
                    </RepeatButton>
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Row="3" Height="18"
                          Style="{StaticResource ScrollBarLineButtonBottomStyle}"
                          Command="ScrollBar.LineDownCommand">
            </RepeatButton>
        </Grid>
    </ControlTemplate>

    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Template" Value="{StaticResource VerticalScrollBar}"/>
    </Style>
</ResourceDictionary>